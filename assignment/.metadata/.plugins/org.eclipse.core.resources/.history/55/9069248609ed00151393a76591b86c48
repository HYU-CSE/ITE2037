import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class Assignment2_3 {
	/*static int _OUT_ = 0, _BAL_ = 1, _STR_ = 2;
	
	static int base = 123;
	static int[] bary = new int[]{1,2,3};
	
	static boolean isValid(int[] arg) {
		boolean[] number = new boolean[10];
		Arrays.fill(number, false);
		for (int e : arg)
			if (number[e] == true)
				return false;
			else
				number[e] = true;
		return true;
	}

	static int[] isMatch(int[] pitch) {
		boolean[] aryPitch = new boolean[10], aryBase = new boolean[10];
		int[] ret = new int[3];
		Arrays.fill(aryPitch, false);
		Arrays.fill(aryBase, false);
		
		for (int i = 0; i < pitch.length; i++)
			if (pitch[i] == bary[i])
				ret[_STR_] ++;
			else
				aryPitch[pitch[i]] = aryBase[bary[i]] = true;
		
		for (int i = 0; i < 10; i++)
			if (aryPitch[i] == aryBase[i] && aryPitch[i])
				ret[_BAL_] ++;
		
		ret[_OUT_] = 3 - (ret[_STR_] + ret[_BAL_]);
		return ret;
	}
	
	
	static int nextBase() {
		do {
			base++;
			String str = Integer.toString(base);
			for(int i = 0; i < str.length(); i++)
				bary[i] = (int)str.charAt(i) - 48;
			for(int i = 0; i<str.length(); i++) 
				System.out.print(bary[i]);
			System.out.println("");
		} while(!isValid(bary));
		return base;
	}
	
	static int popNumber(ArrayList<Integer> ary) {
		Random rand = new Random();
		int idx = rand.nextInt(ary.size());
		int ret = ary.get(idx);
		ary.remove(idx);
		return ret;
	}
	
	static int cntPitch(int[] ary) {
		int ret = 0;
		for (int e : ary)
			ret += e;
		return ret;
	}
	
	public static void main(String[] arg) {
		
		int[] pitch = new int[3], stat = new int[3], ret = new int[3];
		do {
			List<List<Integer>> bals = new ArrayList<List<Integer>>(3);
			
			ArrayList<Integer> 	num = new ArrayList<Integer>(),
								bal = new ArrayList<Integer>();
			for (int i = 1; i < 10; i++)
				num.add(i);
			
			do {
				Arrays.fill(pitch, 0);
				if (cntPitch(stat) == 0 && bal.size() == 0) {
					for (int i = 0; i < 3; i++)
						pitch[i] = popNumber(num);
				} else {
					
				}
				
				ret = isMatch(pitch);

				if (ret[0] == 3) {
					
				} else if (ret[2] > 0) {W
					
				}
				
				
				for (int i = 0; i < 3; i++)
					System.out.print(ret[i]);
				System.out.println("");
				
			} while(ret[_STR_] != 3);
		} while (nextBase() != 987);
	}*/

	static int base;
	static boolean[] map = new boolean[1000];
	
	static int[] getVivid(int value) {
		int[] arg = new int[]{value / 100, (value / 10) - (value / 100) * 10 , value - (value / 10) * 10 };
		return arg;
	}
	
	static boolean isValid(int[] arg) {
		boolean[] number = new boolean[10];
		Arrays.fill(number, false);
		for (int e : arg)
			if (number[e] == true)
				return false;
			else
				number[e] = true;
		return true;
	}
	
	static void setInit() {
		Arrays.fill(map, true);
		for (int i = 0; i < 1000; i++)
			if (!isValid(getVivid(i)))
				map[i] = false;
	}
	
	static int getNumber() {
		int ret = 0;
		Random rand = new Random();
		do {
			ret = rand.nextInt(1000);
		} while (!map[ret]);
		return ret;
	}
	
	static int[] setMap(int first, int second) {
		int[] f = getVivid(first), s = getVivid(second), ret = new int[2];
		for (int i = 0; i < 3; i++)
			for (int j = 0; j < 3; j++) {
				if (f[i] == s[j]) {
					if (i == j)
						ret[0]++;
					else
						ret[1]++;
				}
			}
		return ret;
	}
	
	static void doProcess(int pitch, int nStrike, int nBall) {
		int strike, ball;
		for (int i = 0; i < 1000; i++)
		{
			int[] sb = setMap(i, pitch);
			strike = sb[0];
			ball = sb[1];
			if (nStrike != strike || nBall != ball)
				map[i] = false;
		}
	}
	
	public static void main(String[] arg) {
		// 1. 컴퓨터가 숫자를 부른다.
		
		int s,b;
		do {
			setInit();
			int v = getNumber();
			System.out.println(v);
			Scanner in = new Scanner(System.in);
			s = in.nextInt();
			b = in.nextInt();
			doProcess(v, s, b);
		} while (s < 3);
		
	}
}
